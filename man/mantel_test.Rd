% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprecated.R, R/mantel-test.R
\name{fortify_mantel}
\alias{fortify_mantel}
\alias{mantel_test}
\title{Mantel test}
\usage{
mantel_test(
  spec,
  env,
  group = NULL,
  env.ctrl = NULL,
  mantel.fun = "mantel",
  spec.select = NULL,
  env.select = NULL,
  use = "everything",
  spec.dist.method = "bray",
  env.dist.method = "euclidean",
  seed = 123,
  ...
)
}
\arguments{
\item{...}{extra params passing to \code{mantel.fun}.}

\item{spec, env}{data frame object.}

\item{group}{vector for grouping the rows.}

\item{env.ctrl}{NULL (default), data frame.}

\item{mantel.fun}{string, function of mantel test.
 \itemize{
   \item{\code{"mantel"} will use \code{vegan::mantel()} (default).}
   \item{\code{"mantel.randtest"} will use \code{ade4::mantel.randtest()}.}
   \item{\code{"mantel.rtest"} will use \code{ade4::mantel.rtest()}.}
   \item{\code{"mantel.partial"} will use \code{vegan::mantel.partial()} (default).}
}}

\item{spec.select, env.select}{NULL (default), numeric or character vector index of columns.}

\item{use}{one of "everything", "complete" or "pairwise".}

\item{spec.dist.method}{dissimilarity index (default is 'bray'), passing to \code{method}
params of \code{vegan::vegdist}.}

\item{env.dist.method}{dissimilarity index (default is euclidean'), passing to \code{method}
params of \code{vegan::vegdist()}.}

\item{seed}{a integer value.}
}
\value{
a data.frame.
}
\description{
Mantel and partial mantel test for dissimilarity matrices
}
\examples{
\dontrun{
library(vegan)
data("varespec")
data("varechem")
mantel_test(varespec, varechem,
  spec.select = list(spec01 = 1:5, spec02 = 6:12))
mantel_test(varespec, varechem,
  spec.select = list(spec01 = 1:5, spec02 = 6:12),
  env.select = list(env01 = 1:5, env02 = 6:10, env03 = 11:14))
set.seed(20191224)
sam_grp <- sample(paste0("sample", 1:3), 24, replace = TRUE)
mantel_test(varespec, varechem, group = sam_grp)
}
}
\seealso{
\code{\link{mantel_test}}.
}
\author{
Houyun Huang, Lei Zhou, Jian Chen, Taiyun Wei
}
